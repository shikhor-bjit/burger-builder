{"version":3,"sources":["components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","context/AuthContext/AuthContext.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/ToggleDrawer/ToggleDrawer.js","components/Navigation/Toolbar/Toolbar.js","components/hoc/Aux.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","axios-order.js","components/UI/Modal/Modal.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/UI/Spinner/Spinner.js","components/UI/Button/Button.js","components/OrderSummary/OrderSummary.js","components/IngredientController/SingleController/SingleController.js","components/IngredientController/IngredientController.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","containers/Auth/Auth.js","components/OrderList/Order/Order.js","components/OrderList/OrderList.js","components/PrivateRouter/PrivateRouter.js","containers/Auth/Logout.js","components/Layout/Layout.js","containers/App.js","serviceWorker.js","store/reducers/burgerBuilder.js","index.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","assets/images/app-logo.png"],"names":["Logo","props","className","style","height","src","LogoImg","alt","NavigationItem","link","exact","to","children","AuthContext","React","createContext","token","updateToken","NavigationItems","useContext","ToggleDrawer","onClick","clicked","Toolbar","Aux","Backdrop","show","defaultProps","shouldShow","SideDrawer","attachedClasses","open","join","instance","axios","create","baseURL","Modal","transform","BurgerIngredient","ingredient","type","BreadTop","Seeds1","Seeds2","BreadBottom","Meat","Cheese","Bacon","Salad","Burger","processedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Spinner","Button","buttonClasses","OrderSummary","cancelOrder","proceedOrder","totalCost","ingKey","SingleController","addIngredients","ingredientCount","removeIngredients","name","disabled","price","IngredientController","placeOrder","ingredientPrices","isOrderPlaceAble","cost","BurgerBuilder","state","loading","message","isPlacedOrder","totalAdded","values","forEach","ingCnt","setState","post","localStorage","getItem","then","response","catch","error","isPlaceAble","this","onIngredientFetch","orderSummary","body","showModal","onIngredientAdd","onIngredientRemove","Component","connect","builder","dispatch","ingredientName","get","data","createFetchIngredientAction","createFetchIngredientFailedAction","Auth","loginForm","email","label","elementType","elementConfig","placeholder","validationHandler","value","trim","initialValue","password","redirect","onSubmit","context","setItem","errors","touched","validate","redirectTo","location","referer","initialValues","content","prepareFormikFields","display","justifyContent","contextType","Order","serial","items","OrderList","orders","hasError","errMessage","console","log","backgroundColor","padding","color","borderRadius","textTransform","boxSizing","width","minWidth","margin","PrivateRoute","component","rest","useEffect","render","pathname","Logout","removeItem","Layout","isSideDrawerOpen","closeSideDrawer","sideDrawerToggleHandler","prevState","path","App","Provider","Boolean","window","hostname","match","initialState","salad","bacon","cheese","meat","burgerBuilder","newState","action","rootReducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.bdcf3301.chunk.js","sourcesContent":["import './Logo.css';\nimport React from 'react';\nimport LogoImg from '../../assets/images/app-logo.png';\n\nconst Logo = props => {\n    return (\n        <div className={'Logo'} style={{height: props.height}}>\n            <img src={LogoImg} alt=\"BurgerLogo\"/>\n        </div>\n    );\n};\n\nLogo.propTypes = {};\n\nexport default Logo;","import React from 'react';\nimport './NavigationItem.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst NavigationItem = props => {\n    const link = props.link;\n    return (\n        <li className={'NavigationItem'}>\n            <NavLink\n                exact\n                to={link}>\n                {props.children}\n            </NavLink>\n        </li>\n    );\n};\n\nNavigationItem.propTypes = {};\n\nexport default NavigationItem;","import React, {useContext} from \"react\";\n\nexport const AuthContext = React\n    .createContext({token: '', updateToken: () => {}});\n\nexport const useAuth = () => useContext(AuthContext);","import React, {useContext} from 'react';\nimport './NavigationItems.css';\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\nimport {AuthContext} from \"../../../context/AuthContext/AuthContext\";\n\nconst NavigationItems = props => {\n    const {token, updateToken} = useContext(AuthContext);\n\n    return (\n        <ul className={'NavigationItems'}>\n            {token ? <NavigationItem link={'/burger-builder'}>{'Burger Builder'}</NavigationItem> : null}\n            {token ? <NavigationItem link={'/burger-builder/order-list'}>{'Order List'}</NavigationItem> : null}\n            {\n                token\n                    ? <NavigationItem link={'/burger-builder/logout'}>{'Log Out'}</NavigationItem>\n                    : <NavigationItem link={'/burger-builder/authenticate'}>{'Login'}</NavigationItem>\n            }\n        </ul>\n    );\n};\n\nNavigationItems.propTypes = {};\n\nexport default NavigationItems;","import React from 'react';\nimport './ToggleDrawer.css';\n\nconst ToggleDrawer = props => {\n    return (\n        <div className={'ToggleDrawer'} onClick={props.clicked}>\n            <div/>\n            <div/>\n            <div/>\n        </div>\n    );\n};\n\nToggleDrawer.propTypes = {};\n\nexport default ToggleDrawer;","import './Toolbar.css';\nimport React from 'react';\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport ToggleDrawer from \"../SideDrawer/ToggleDrawer/ToggleDrawer\";\n\nconst Toolbar = props => {\n    return (\n        <div className={'Toolbar'}>\n            <ToggleDrawer clicked={props.clicked}/>\n            <Logo height={'80%'}/>\n            <div className={'DesktopOnly'}>\n                <NavigationItems/>\n            </div>\n        </div>\n    );\n};\n\nToolbar.propTypes = {};\n\nexport default Toolbar;","import React from 'react';\n\nconst Aux = props => {\n    return (\n        <div className={'Aux'}>\n            {props.children}\n        </div>\n    );\n};\n\nAux.propTypes = {};\n\nexport default Aux;","import React from 'react';\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n    const clicked = props.clicked;\n    const shouldShow = props.show;\n    return (\n        shouldShow ? <div className={'Backdrop'} onClick={clicked}/> : null\n    );\n};\n\nBackdrop.propTypes = {};\nBackdrop.defaultProps = {\n    shouldShow: false\n};\n\nexport default Backdrop;","import React from 'react';\nimport './SideDrawer.css';\nimport Aux from \"../../hoc/Aux\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nconst SideDrawer = props => {\n    let attachedClasses = ['SideDrawer Close'];\n    if (props.open) {\n        attachedClasses = ['SideDrawer Open'];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.clicked}/>\n            <div className={attachedClasses.join(' ')}>\n                <Logo height={'15%'}/>\n                <NavigationItems/>\n            </div>\n        </Aux>\n    );\n};\n\nSideDrawer.propTypes = {};\n\nexport default SideDrawer;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burger-builder-40b7d.firebaseio.com'\n});\n\nexport default instance;","import './Modal.css';\nimport React from 'react';\nimport Aux from \"../../hoc/Aux\";\nimport PropTypes from 'prop-types';\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nconst Modal = props => {\n    const clicked = props.clicked;\n    const shouldShow = props.show;\n    return (\n        <Aux>\n            <Backdrop show={shouldShow} clicked={clicked}/>\n            <div className={'Modal'}\n                 style={{\n                     transform: shouldShow ? 'translate(0)' : 'translateY(-100vh)'\n                 }}>\n                {props.children}\n            </div>\n        </Aux>\n    );\n};\n\nModal.propTypes = {\n    show: PropTypes.bool\n};\nModal.defaultProps = {\n    show: false\n}\n\nexport default Modal;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from './BurgerIngredient.module.css';\n\nconst BurgerIngredient = (props) => {\n    let ingredient;\n\n    switch (props.type) {\n        case 'bread-top':\n            ingredient = (\n                <div className={style.BreadTop}>\n                    <div className={style.Seeds1}/>\n                    <div className={style.Seeds2}/>\n                </div>\n            );\n            break;\n        case 'bread-bottom':\n            ingredient = (<div className={style.BreadBottom}/>);\n            break;\n        case 'meat':\n            ingredient = (<div className={style.Meat}/>);\n            break;\n        case 'cheese':\n            ingredient = (<div className={style.Cheese}/>);\n            break;\n        case 'bacon':\n            ingredient = (<div className={style.Bacon}/>);\n            break;\n        case 'salad':\n            ingredient = (<div className={style.Salad}/>);\n            break;\n        default:\n            ingredient = null;\n    }\n    return (ingredient);\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import './Burger.css';\nimport React from \"react\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst Burger = (props) => {\n    let processedIngredients = Object.keys(props.ingredients).map(\n        igKey => {\n            return [...Array(props.ingredients[igKey])].map(\n                (_, i) => {\n                    return (\n                        <BurgerIngredient type={igKey} key={igKey + i}/>\n                    );\n                }\n            );\n        }\n    ).reduce(\n        (arr, el) => {\n            return arr.concat(el);\n        }, []\n    );\n    // console.log(processedIngredients);\n    if (processedIngredients.length === 0) processedIngredients = <p>please start adding ingredients</p>\n    return (\n        <div className=\"Burger\">\n            <BurgerIngredient type={'bread-top'}/>\n            {processedIngredients}\n            <BurgerIngredient type={'bread-bottom'}/>\n        </div>\n    );\n};\n\nexport default Burger;","import './Spinner.css';\nimport React from 'react';\n\nconst Spinner = props => {\n    return (\n        <div className={'Spinner'}>Loading....</div>\n    );\n};\n\nSpinner.propTypes = {};\n\nexport default Spinner;","import './Button.css';\nimport React from \"react\";\n\nconst Button = (props) => {\n    let buttonClasses;\n    switch (props.type) {\n        case 'Success':\n            buttonClasses = 'Success';\n            break;\n        case 'Danger':\n            buttonClasses = 'Danger';\n            break;\n        default:\n            buttonClasses = 'Default';\n    }\n    return (\n        <div className={'Button'}>\n            <button\n                className={buttonClasses}\n                onClick={props.clicked}>{props.children}\n            </button>\n        </div>\n    );\n};\n\nexport default Button;","import React from 'react';\nimport './OrderSummary.css';\nimport Button from \"../UI/Button/Button\";\n\nconst OrderSummary = (props) => {\n    const cancelOrder = props.clicked;\n    const proceedOrder = props.proceedOrder;\n\n    const totalCost = props.totalCost;\n    const ingredients = props.ingredients;\n\n    return (\n        <div className={'OrderSummary'}>\n            <p>Oh Yeah! You are ordering a Burger with the following items:</p>\n            <ul>\n                {\n                    Object.keys(ingredients).map(\n                        ingKey => {\n                            return (\n                                <li key={ingKey}>{ingKey}: {ingredients[ingKey]}</li>\n                            );\n                        }\n                    )\n                }\n            </ul>\n            <strong>Your Total Cost: {totalCost} TK</strong>\n            <div className={'ButtonBlock'}>\n                <Button type={'Danger'} clicked={cancelOrder}>CANCEL</Button>\n                <Button type={'Success'} clicked={proceedOrder}>CONTINUE</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default OrderSummary;","import React from 'react';\nimport './SingleController.css'\nimport PropTypes from 'prop-types';\n\nconst SingleController = props => {\n    const addIngredients = props.addIngredients;\n    const ingredientCount = props.ingredientCount;\n    const removeIngredients = props.removeIngredients;\n\n    return (\n        <div className={'SingleController'}>\n            <span className={'Label'}>{props.name}</span>\n            <button\n                className={'Less'}\n                disabled={ingredientCount === 0}\n                onClick={() => removeIngredients(props.name)}>Less\n            </button>\n            <button onClick={() => addIngredients(props.name)} className={'More'}>More</button>\n            ({!props.price ? 0 : props.price} tk / item)\n        </div>\n    );\n}\n\nSingleController.propTypes = {\n    name: PropTypes.string.isRequired,\n    ingredientCount: PropTypes.number.isRequired\n};\n\nexport default SingleController;","import React from 'react';\nimport Aux from \"../hoc/Aux\";\nimport './IngredientController.css';\nimport SingleController from \"./SingleController/SingleController\";\n\nconst IngredientController = props => {\n    const totalCost = props.totalCost;\n    const placeOrder = props.placeOrder;\n    const ingredients = props.ingredients;\n    const addIngredients = props.addIngredients;\n    const ingredientPrices = props.ingredientPrices;\n    const isOrderPlaceAble = props.isOrderPlaceAble;\n    const removeIngredients = props.removeIngredients;\n\n    return (\n        <Aux>\n            <p>Total Cost: <strong>{totalCost} TK.</strong></p>\n            <div className={'IngredientController'}>\n                {\n                    Object.keys(props.ingredientPrices)\n                        .map(\n                            (ingKey, i) => {\n                                return (\n                                    <SingleController\n                                        key={ingKey + i}\n                                        name={ingKey}\n                                        addIngredients={addIngredients}\n                                        removeIngredients={removeIngredients}\n                                        ingredientCount={ingredients[ingKey]}\n                                        price={ingredientPrices[ingKey]}/>\n                                );\n                            }\n                        )\n                }\n                <button onClick={placeOrder} disabled={isOrderPlaceAble}>Place Order</button>\n            </div>\n        </Aux>\n    );\n};\n\nIngredientController.propTypes = {};\nIngredientController.defaultProps = {\n    cost: 0\n};\n\nexport default IngredientController;","import './BurgerBuilder.css';\nimport axios from \"../../axios-order\";\nimport React, {Component} from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Burger from \"../../components/Burger/Burger\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport OrderSummary from \"../../components/OrderSummary/OrderSummary\";\nimport IngredientController from \"../../components/IngredientController/IngredientController\";\nimport {connect} from 'react-redux';\nimport * as actionCreator from '../../store/actions';\nimport Aux from \"../../components/hoc/Aux\";\n\nclass BurgerBuilder extends Component {\n    state = {\n        loading: false,\n        message: null,\n        isPlacedOrder: false\n    }\n\n    componentDidMount() {\n        this.props.onIngredientFetch();\n    }\n\n    placeOrder = () => {\n        let totalAdded = 0;\n        let isPlacedOrder = true;\n        const ingredients = {...this.props.ingredients};\n        Object.values(ingredients).forEach(ingCnt => totalAdded += ingCnt)\n        if (totalAdded === 0) isPlacedOrder = false;\n\n        this.setState({isPlacedOrder: isPlacedOrder});\n    }\n\n    cancelOrder = () => {\n        this.setState({isPlacedOrder: false, message: null});\n    }\n\n    proceedOrder = () => {\n        this.setState({loading: true});\n        axios.post(`/orders.json?auth=${localStorage.getItem('token')}`, this.props.ingredients)\n            .then(response => {\n                this.setState({\n                    loading: false,\n                    message: 'Order placed! We will reach you soon.'\n                });\n            })\n            .catch(error => {\n                this.setState({loading: false, message: error.message});\n            });\n    }\n\n    isOrderPlaceAble = () => {\n        let isPlaceAble = true;\n        Object.keys(this.props.ingredients).forEach(\n            ingKey => {\n                if (this.props.ingredients[ingKey] > 0) isPlaceAble = false;\n            }\n        )\n        return isPlaceAble;\n    }\n\n    render() {\n        let orderSummary, body;\n        let showModal = false;\n\n        if (this.props.error) {\n            showModal = true;\n            orderSummary = this.props.error;\n        } else if (this.props.ingredients) {\n            orderSummary = (\n                <OrderSummary\n                    ingredients={this.props.ingredients}\n                    totalCost={this.props.totalCost}\n                    clicked={this.cancelOrder}\n                    proceedOrder={this.proceedOrder}/>\n            );\n            if (this.state.loading) orderSummary = <Spinner/>;\n            if (this.state.message) orderSummary = this.state.message;\n\n            body = (\n                <Aux>\n                    <Burger ingredients={this.props.ingredients}/>\n                    <IngredientController ingredientPrices={this.props.ingredientPrices}\n                                          addIngredients={this.props.onIngredientAdd}\n                                          removeIngredients={this.props.onIngredientRemove}\n                                          totalCost={this.props.totalCost}\n                                          placeOrder={this.placeOrder}\n                                          ingredients={this.props.ingredients}\n                                          isOrderPlaceAble={this.isOrderPlaceAble()}\n                    />\n                </Aux>\n            );\n        } else body = <Spinner>Loading....</Spinner>;\n\n        if (this.state.isPlacedOrder) showModal = true;\n        return (\n            <div className={'BurgerBuilder'}>\n                <Modal show={showModal} clicked={this.cancelOrder}>\n                    {orderSummary}\n                </Modal>\n                {body}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.builder.ingredients,\n        ingredientPrices: state.builder.ingredientPrices,\n        totalCost: state.builder.totalCost,\n        error: state.builder.error\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdd: (ingredientName) => dispatch(actionCreator.addIngredient(ingredientName)),\n        onIngredientRemove: (ingredientName) => dispatch(actionCreator.removeIngredient(ingredientName)),\n        onIngredientFetch: () => dispatch(actionCreator.fetchIngredient())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BurgerBuilder);\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-order';\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n}\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n}\n\nconst createFetchIngredientAction = (response) => {\n    return {\n        type: actionTypes.FETCH_INGREDIENT,\n        ingredients: response.data\n    };\n}\n\nconst createFetchIngredientFailedAction = (error) => {\n    return {\n        type: actionTypes.FETCH_INGREDIENT_FAILED,\n        error: error.message\n    };\n}\n\nexport const fetchIngredient = () => {\n    return dispatch => {\n        axios.get('/ingredients.json')\n            .then(response => {\n                dispatch(createFetchIngredientAction(response));\n            })\n            .catch(error => {\n                dispatch(createFetchIngredientFailedAction(error));\n            });\n    };\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const FETCH_INGREDIENT = 'FETCH_INGREDIENT';\nexport const FETCH_INGREDIENT_FAILED = 'FETCH_INGREDIENT_FAILED';\n","import './Auth.css';\nimport React, {Component} from 'react';\nimport Aux from \"../../components/hoc/Aux\";\nimport {Field, Form, Formik} from \"formik\";\nimport Button from \"../../components/UI/Button/Button\";\nimport axios from 'axios';\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport {Redirect} from \"react-router\";\nimport {AuthContext} from \"../../context/AuthContext/AuthContext\";\n\nclass Auth extends Component {\n    state = {\n        loginForm: {\n            email: {\n                label: 'Email',\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Enter Your Email'\n                },\n                validationHandler: value => {\n                    if (value.trim().length === 0)\n                        return '* Email Required';\n                },\n                initialValue: ''\n            },\n            password: {\n                label: 'Password',\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Enter Your Password'\n                },\n                validationHandler: value => {\n                    if (value.trim().length === 0)\n                        return '* Password Required';\n                },\n                initialValue: ''\n            }\n        },\n        loading: false,\n        redirect: false\n    }\n\n    static contextType = AuthContext;\n\n    onSubmit = values => {\n        this.setState({loading: true});\n        const url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBpPcBC_CkREoXA5lM4yd1qrek9i1rAU8U';\n\n        values[\"returnSecureToken\"] = true;//~ this line is a must. this line cost about 2 hours\n        //~ to figure out, why my requests got unauthorized response though i was using returned token\n        axios.post(url, values)\n            .then(response => {\n                this.context.updateToken(response.data['idToken']);\n                localStorage.setItem('token', response.data['idToken']);\n                this.setState({loading: false, redirect: true});\n            })\n            .catch(error => {\n                this.setState({loading: false, redirect: false});\n            })\n    }\n\n    prepareFormikFields(errors, touched) {\n        const loginForm = this.state.loginForm;\n        return Object.keys(loginForm)\n            .map((name, i) => {\n                    return (\n                        <Aux key={name + i}>\n                            <p>{loginForm[name].label ? loginForm[name].label : name}</p>\n                            <Field name={name}\n                                   type={loginForm[name].elementConfig.type}\n                                   placeholder={loginForm[name].elementConfig.placeholder}\n                                   validate={loginForm[name].validationHandler}/>\n                            {\n                                errors[name] && touched[name]\n                                    ? <div className={'FieldError'}>{errors[name]}</div>\n                                    : null\n                            }\n                        </Aux>\n                    );\n                }\n            )\n    }\n\n    render() {\n        let redirectTo = (this.props.location.state && this.props.location.state.referer) || '/burger-builder';\n        const initialValues = {};\n        const loginForm = this.state.loginForm;\n        Object.keys(loginForm)\n            .forEach(key => initialValues[key] = loginForm[key].initialValue);\n\n        const content = this.state.redirect\n            ? <Redirect to={redirectTo}/>\n            : this.state.loading\n                ? <Spinner/>\n                : <Formik\n                    initialValues={initialValues}\n                    onSubmit={this.onSubmit}>\n                    {({errors, touched}) => (\n                        <Form>\n                            {this.prepareFormikFields(errors, touched)}\n                            <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                                <Button type={'Success'}>LOGIN</Button>\n                            </div>\n                        </Form>\n                    )}\n                </Formik>;\n\n        return (<div className={'Auth'}> {content} </div>);\n    }\n}\n\nAuth.propTypes = {};\n\nexport default Auth;","import './Order.css';\nimport React from 'react';\n\nconst Order = props => {\n    return (\n        <div className={'Order'}>\n            <strong>Order: {props.serial}</strong>\n            <ul>\n                {Object.keys(props.items).map(\n                    (key, i) => {\n                        return <li key={key + i}>{key} : {props.items[key]}</li>\n                    }\n                )}\n            </ul>\n        </div>\n    );\n};\n\nOrder.propTypes = {};\n\nexport default Order;","import React from 'react';\nimport Order from \"./Order/Order\";\nimport axios from '../../axios-order';\nimport Spinner from \"../UI/Spinner/Spinner\";\n\nclass OrderList extends React.Component {\n    state = {\n        orders: null,\n        hasError: false,\n        errMessage: '',\n        loading: false\n    }\n\n    componentDidMount() {\n        this.setState({loading: true});\n        axios.get(`/orders.json?auth=${localStorage.getItem('token')}`)\n            .then(response => {\n                this.setState({\n                    orders: response.data,\n                    hasError: false,\n                    loading: false\n                });\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({hasError: true, errMessage: error.message, loading: false});\n            })\n    }\n\n    render() {\n        let content = this.state.hasError\n            ? <p style={\n                {\n                    backgroundColor: \"crimson\",\n                    display: \"block\",\n                    padding: \"5px\",\n                    color: \"white\",\n                    borderRadius: \"5px\",\n                    textTransform: \"capitalize\",\n                    boxSizing: \"border-box\",\n                    width: \"400px\",\n                    minWidth: \"30%\",\n                    margin: \"10px auto\"\n                }\n            }>{this.state.errMessage}</p>\n            : this.state.orders === null\n                ? <p>No Order Found</p>\n                : Object.keys(this.state.orders).map(\n                    (key, i) => {\n                        return <Order key={key} serial={i + 1} items={this.state.orders[key]}/>\n                    }\n                );\n        if (this.state.loading) content = <Spinner>Loading...</Spinner>\n\n        return (\n            <div className={'OrderList'}>\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default OrderList;","import React, {useEffect} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {useAuth} from \"../../context/AuthContext/AuthContext\";\n\nfunction PrivateRoute({component: Component, ...rest}) {\n    const {token, updateToken} = useAuth();\n\n    useEffect(() => {\n        updateToken(localStorage.getItem('token'));\n    }, []);\n\n    return (\n        <Route {...rest} render={\n            props => {\n                return token\n                    ? (<Component {...props} />)\n                    : (<Redirect\n                            to={{\n                                pathname: \"/burger-builder/authenticate\",\n                                state: {referer: props.location}\n                            }}/>\n                    )\n            }\n        }\n        />\n    );\n}\n\nexport default PrivateRoute;","import './Auth.css';\nimport React, {useContext, useEffect} from 'react';\nimport {AuthContext} from \"../../context/AuthContext/AuthContext\";\nimport {Redirect} from \"react-router\";\n\nconst Logout = () => {\n    const {updateToken} = useContext(AuthContext);\n\n    useEffect(() => {\n        updateToken(null);\n        localStorage.removeItem('token');\n    }, []);\n\n    return (\n        <Redirect to={'/burger-builder/authenticate'}/>\n    )\n}\n\nLogout.propTypes = {};\n\nexport default Logout;","import './Layout.css';\nimport React from \"react\";\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../Navigation/SideDrawer/SideDrawer\";\nimport {Route, Switch} from 'react-router-dom';\nimport BurgerBuilder from \"../../containers/BurgerBuilder/BurgerBuilder\";\nimport Auth from \"../../containers/Auth/Auth\";\nimport OrderList from \"../OrderList/OrderList\";\nimport PrivateRoute from \"../PrivateRouter/PrivateRouter\";\nimport Logout from \"../../containers/Auth/Logout\";\n\nclass Layout extends React.Component {\n    state = {\n        isSideDrawerOpen: false\n    }\n\n    closeSideDrawer = () => {\n        this.setState({isSideDrawerOpen: false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState(\n            (prevState) => {\n                return (\n                    {isSideDrawerOpen: !prevState.isSideDrawerOpen}\n                );\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"Layout\">\n                <Toolbar clicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer\n                    open={this.state.isSideDrawerOpen}\n                    clicked={this.closeSideDrawer}/>\n                <Switch>\n                    <PrivateRoute path={'/burger-builder'} exact component={BurgerBuilder}/>\n                    <PrivateRoute path={'/burger-builder/order-list'} exact component={OrderList}/>\n                    <Route path={'/burger-builder/authenticate'} exact component={Auth}/>\n                    <Route path={'/burger-builder/logout'} exact component={Logout}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import './App.css';\nimport React, {Component} from 'react';\nimport Layout from \"../components/Layout/Layout\";\nimport {AuthContext} from \"../context/AuthContext/AuthContext\";\n\nclass App extends Component {\n    state = {\n        token: localStorage.getItem('token'),\n        updateToken: (token) => {\n            this.setState({token: token});\n        }\n    }\n\n    render = () => {\n        return (\n            <AuthContext.Provider value={\n                {\n                    token: this.state.token,\n                    updateToken: this.state.updateToken\n                }\n            }>\n                <div className=\"App\">\n                    <Layout/>\n                </div>\n            </AuthContext.Provider>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n    ingredients: null,\n    ingredientPrices: {\n        salad: 10,\n        bacon: 20,\n        cheese: 30,\n        meat: 100\n    },\n    totalCost: 10,\n    error: null\n};\n\nconst burgerBuilder = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            newState = {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalCost: state.totalCost + state.ingredientPrices[action.ingredientName]\n            };\n            break;\n        case actionTypes.REMOVE_INGREDIENT:\n            newState = {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                },\n                totalCost: state.totalCost - state.ingredientPrices[action.ingredientName]\n            };\n            break;\n        case actionTypes.FETCH_INGREDIENT:\n            newState = {\n                ...state,\n                ingredients: {\n                    ...action.ingredients\n                }\n            };\n            break;\n        case actionTypes.FETCH_INGREDIENT_FAILED:\n            newState = {\n                ...state,\n                error: action.error\n            };\n            break;\n        default:\n            newState = state;\n    }\n    return newState;\n};\n\nexport default burgerBuilder;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport burgerBuilder from \"./store/reducers/burgerBuilder\";\nimport logger from \"./store/logger\";\nimport thunk from \"redux-thunk\";\nimport {BrowserRouter} from 'react-router-dom';\n\nconst rootReducers = combineReducers({\n    builder: burgerBuilder\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducers,\n    // composeEnhancers(applyMiddleware(logger, thunk))\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            {app}\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","module.exports = __webpack_public_path__ + \"static/media/app-logo.b8503d26.png\";"],"sourceRoot":""}