{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","assets/images/app-logo.png","axios-order.js","components/hoc/Aux.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/UI/Spinner/Spinner.js","components/UI/Button/Button.js","components/OrderSummary/OrderSummary.js","components/IngredientController/SingleController/SingleController.js","components/IngredientController/IngredientController.js","containers/BurgerBuilder/BurgerBuilder.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/ToggleDrawer/ToggleDrawer.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","Aux","props","className","children","Backdrop","clicked","show","onClick","defaultProps","shouldShow","Modal","style","transform","BurgerIngredient","ingredient","type","BreadTop","Seeds1","Seeds2","BreadBottom","Meat","Cheese","Bacon","Salad","Burger","processedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Spinner","Button","buttonClasses","OrderSummary","cancelOrder","proceedOrder","totalCost","ingKey","SingleController","addIngredients","ingredientCount","removeIngredients","name","disabled","price","IngredientController","placeOrder","ingredientPrices","isOrderPlaceAble","cost","BurgerBuilder","state","salad","bacon","cheese","meat","isPlacedOrder","loading","message","setState","totalAdded","values","forEach","ingCnt","post","then","response","catch","error","isPlaceAble","orderSummary","this","Component","Logo","height","src","LogoImg","alt","NavigationItem","link","active","console","log","href","NavigationItems","ToggleDrawer","Toolbar","SideDrawer","attachedClasses","open","join","Layout","isSideDrawerOpen","closeSideDrawer","sideDrawerToggleHandler","prevState","React","App","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4794914a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","module.exports = __webpack_public_path__ + \"static/media/app-logo.b8503d26.png\";","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burger-builder-40b7d.firebaseio.com'\n});\n\nexport default instance;","import React from 'react';\n\nconst Aux = props => {\n    return (\n        <div className={'Aux'}>\n            {props.children}\n        </div>\n    );\n};\n\nAux.propTypes = {};\n\nexport default Aux;","import React from 'react';\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n    const clicked = props.clicked;\n    const shouldShow = props.show;\n    return (\n        shouldShow ? <div className={'Backdrop'} onClick={clicked}/> : null\n    );\n};\n\nBackdrop.propTypes = {};\nBackdrop.defaultProps = {\n    shouldShow: false\n};\n\nexport default Backdrop;","import './Modal.css';\nimport React from 'react';\nimport Aux from \"../../hoc/Aux\";\nimport PropTypes from 'prop-types';\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nconst Modal = props => {\n    const clicked = props.clicked;\n    const shouldShow = props.show;\n    return (\n        <Aux>\n            <Backdrop show={shouldShow} clicked={clicked}/>\n            <div className={'Modal'}\n                 style={{\n                     transform: shouldShow ? 'translate(0)' : 'translateY(-100vh)'\n                 }}>\n                {props.children}\n            </div>\n        </Aux>\n    );\n};\n\nModal.propTypes = {\n    show: PropTypes.bool\n};\nModal.defaultProps = {\n    show: false\n}\n\nexport default Modal;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from './BurgerIngredient.module.css';\n\nconst BurgerIngredient = (props) => {\n    let ingredient;\n\n    switch (props.type) {\n        case 'bread-top':\n            ingredient = (\n                <div className={style.BreadTop}>\n                    <div className={style.Seeds1}/>\n                    <div className={style.Seeds2}/>\n                </div>\n            );\n            break;\n        case 'bread-bottom':\n            ingredient = (<div className={style.BreadBottom}/>);\n            break;\n        case 'meat':\n            ingredient = (<div className={style.Meat}/>);\n            break;\n        case 'cheese':\n            ingredient = (<div className={style.Cheese}/>);\n            break;\n        case 'bacon':\n            ingredient = (<div className={style.Bacon}/>);\n            break;\n        case 'salad':\n            ingredient = (<div className={style.Salad}/>);\n            break;\n        default:\n            ingredient = null;\n    }\n    return (ingredient);\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import './Burger.css';\nimport React from \"react\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst Burger = (props) => {\n    // console.log(\"ingredients: \", props.ingredients);\n    let processedIngredients = Object.keys(props.ingredients).map(\n        igKey => {\n            return [...Array(props.ingredients[igKey])].map(\n                (_, i) => {\n                    return (\n                        <BurgerIngredient type={igKey} key={igKey + i}/>\n                    );\n                }\n            );\n        }\n    ).reduce(\n        (arr, el) => {\n            return arr.concat(el);\n        }, []\n    );\n    // console.log(processedIngredients);\n    if (processedIngredients.length === 0) processedIngredients = <p>please start adding ingredients</p>\n    return (\n        <div className=\"Burger\">\n            <BurgerIngredient type={'bread-top'}/>\n            {processedIngredients}\n            <BurgerIngredient type={'bread-bottom'}/>\n        </div>\n    );\n};\n\nexport default Burger;","import './Spinner.css';\nimport React from 'react';\n\nconst Spinner = props => {\n    return (\n        <div className={'Spinner'}>Loading....</div>\n    );\n};\n\nSpinner.propTypes = {};\n\nexport default Spinner;","import './Button.css';\nimport React from \"react\";\n\nconst Button = (props) => {\n    let buttonClasses;\n    switch (props.type) {\n        case 'Success':\n            buttonClasses = 'Success';\n            break;\n        case 'Danger':\n            buttonClasses = 'Danger';\n            break;\n        default:\n            buttonClasses = 'Default';\n    }\n    return (\n        <div className={'Button'}>\n            <button\n                className={buttonClasses}\n                onClick={props.clicked}>{props.children}\n            </button>\n        </div>\n    );\n};\n\nexport default Button;","import React from 'react';\nimport './OrderSummary.css';\nimport Button from \"../UI/Button/Button\";\n\nconst OrderSummary = (props) => {\n    const cancelOrder = props.clicked;\n    const proceedOrder = props.proceedOrder;\n\n    const totalCost = props.totalCost;\n    const ingredients = props.ingredients;\n\n    return (\n        <div className={'OrderSummary'}>\n            <p>Oh Yeah! You are ordering a Burger with the following items:</p>\n            <ul>\n                {\n                    Object.keys(ingredients).map(\n                        ingKey => {\n                            return (\n                                <li key={ingKey}>{ingKey}: {ingredients[ingKey]}</li>\n                            );\n                        }\n                    )\n                }\n            </ul>\n            <strong>Your Total Cost: {totalCost} TK</strong>\n            <div className={'ButtonBlock'}>\n                <Button type={'Danger'} clicked={cancelOrder}>CANCEL</Button>\n                <Button type={'Success'} clicked={proceedOrder}>CONTINUE</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default OrderSummary;","import React from 'react';\nimport './SingleController.css'\nimport PropTypes from 'prop-types';\n\nconst SingleController = props => {\n    const addIngredients = props.addIngredients;\n    const ingredientCount = props.ingredientCount;\n    const removeIngredients = props.removeIngredients;\n\n    return (\n        <div className={'SingleController'}>\n            <span className={'Label'}>{props.name}</span>\n            <button\n                className={'Less'}\n                disabled={ingredientCount === 0}\n                onClick={() => removeIngredients(props.name)}>Less\n            </button>\n            <button onClick={() => addIngredients(props.name)} className={'More'}>More</button>\n            ({!props.price ? 0 : props.price} tk / item)\n        </div>\n    );\n}\n\nSingleController.propTypes = {\n    name: PropTypes.string.isRequired,\n    ingredientCount: PropTypes.number.isRequired\n};\n\nexport default SingleController;","import React from 'react';\nimport Aux from \"../hoc/Aux\";\nimport './IngredientController.css';\nimport SingleController from \"./SingleController/SingleController\";\n\nconst IngredientController = props => {\n    const totalCost = props.totalCost;\n    const placeOrder = props.placeOrder;\n    const ingredients = props.ingredients;\n    const addIngredients = props.addIngredients;\n    const ingredientPrices = props.ingredientPrices;\n    const isOrderPlaceAble = props.isOrderPlaceAble;\n    const removeIngredients = props.removeIngredients;\n\n    return (\n        <Aux>\n            <p>Total Cost: <strong>{totalCost} TK.</strong></p>\n            <div className={'IngredientController'}>\n                {\n                    Object.keys(props.ingredientPrices)\n                        .map(\n                            (ingKey, i) => {\n                                return (\n                                    <SingleController\n                                        key={ingKey + i}\n                                        name={ingKey}\n                                        addIngredients={addIngredients}\n                                        removeIngredients={removeIngredients}\n                                        ingredientCount={ingredients[ingKey]}\n                                        price={ingredientPrices[ingKey]}/>\n                                );\n                            }\n                        )\n                }\n                <button onClick={placeOrder} disabled={isOrderPlaceAble}>Place Order</button>\n            </div>\n        </Aux>\n    );\n};\n\nIngredientController.propTypes = {};\nIngredientController.defaultProps = {\n    cost: 0\n};\n\nexport default IngredientController;","import './BurgerBuilder.css';\nimport axios from \"../../axios-order\";\nimport React, {Component} from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Burger from \"../../components/Burger/Burger\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport OrderSummary from \"../../components/OrderSummary/OrderSummary\";\nimport IngredientController from \"../../components/IngredientController/IngredientController\";\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        ingredientPrices: {\n            salad: 10,\n            bacon: 20,\n            cheese: 30,\n            meat: 100\n        },\n        totalCost: 10,\n        isPlacedOrder: false,\n        loading: false,\n        message: null\n    }\n\n    addIngredients = (type) => {\n        const ingredients = {...this.state.ingredients};\n        const ingredientPrices = {...this.state.ingredientPrices};\n        ingredients[type] = ingredients[type] + 1;\n\n        const cost = ingredientPrices[type];\n\n        this.setState({ingredients: ingredients, totalCost: this.state.totalCost + cost});\n    }\n\n    removeIngredients = (type) => {\n        const ingredients = {...this.state.ingredients};\n        const ingredientPrices = {...this.state.ingredientPrices};\n        if (ingredients[type] <= 0) return;\n\n        ingredients[type] = ingredients[type] - 1;\n        const cost = ingredientPrices[type];\n\n        this.setState({ingredients: ingredients, totalCost: this.state.totalCost - cost});\n    }\n\n    placeOrder = () => {\n        let totalAdded = 0;\n        let isPlacedOrder = true;\n        const ingredients = {...this.state.ingredients};\n        Object.values(ingredients).forEach(ingCnt => totalAdded += ingCnt)\n        if (totalAdded === 0) isPlacedOrder = false;\n\n        this.setState({isPlacedOrder: isPlacedOrder});\n    }\n\n    cancelOrder = () => {\n        this.setState({isPlacedOrder: false, message: null});\n    }\n\n    proceedOrder = () => {\n        this.setState({loading: true});\n        axios.post('/orders.json', this.state.ingredients)\n            .then(response => {\n                this.setState({loading: false, message: 'order placed successful'});\n            })\n            .catch(error => {\n                this.setState({loading: false, message: error.message});\n            });\n    }\n\n    isOrderPlaceAble = () => {\n        let isPlaceAble = true;\n        Object.keys(this.state.ingredients).forEach(\n            ingKey => {\n                if (this.state.ingredients[ingKey] > 0) isPlaceAble = false;\n            }\n        )\n        return isPlaceAble;\n    }\n\n    render() {\n        let orderSummary = (\n            <OrderSummary\n                ingredients={this.state.ingredients}\n                totalCost={this.state.totalCost}\n                clicked={this.cancelOrder}\n                proceedOrder={this.proceedOrder}/>\n        );\n        if (this.state.loading) orderSummary = <Spinner/>;\n        if (this.state.message) orderSummary = this.state.message;\n\n        return (\n            <div className={'BurgerBuilder'}>\n                <Burger ingredients={this.state.ingredients}/>\n                <Modal show={this.state.isPlacedOrder} clicked={this.cancelOrder}>\n                    {orderSummary}\n                </Modal>\n                <IngredientController ingredientPrices={this.state.ingredientPrices}\n                                      addIngredients={this.addIngredients}\n                                      removeIngredients={this.removeIngredients}\n                                      totalCost={this.state.totalCost}\n                                      placeOrder={this.placeOrder}\n                                      ingredients={this.state.ingredients}\n                                      isOrderPlaceAble={this.isOrderPlaceAble()}\n                />\n            </div>\n        );\n    }\n}\n\nexport default BurgerBuilder;\n","import './Logo.css';\nimport React from 'react';\nimport LogoImg from '../../assets/images/app-logo.png';\n\nconst Logo = props => {\n    return (\n        <div className={'Logo'} style={{height: props.height}}>\n            <img src={LogoImg} alt=\"BurgerLogo\"/>\n        </div>\n    );\n};\n\nLogo.propTypes = {};\n\nexport default Logo;","import React from 'react';\nimport './NavigationItem.css';\n\nconst NavigationItem = props => {\n    const link = props.link;\n    const active = props.active;\n    console.log('active: ', active)\n    return (\n        <li className={'NavigationItem'}>\n            <a href={link}\n               className={active ? 'active' : null}>\n                {props.children}\n            </a>\n        </li>\n    );\n};\n\nNavigationItem.propTypes = {};\n\nexport default NavigationItem;","import React from 'react';\nimport './NavigationItems.css';\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nconst NavigationItems = props => {\n    return (\n        <ul className={'NavigationItems'}>\n            <NavigationItem link={'/burger-builder'} active={true}>{'Burger Builder'}</NavigationItem>\n            <NavigationItem link={'/burger-builder'}>{'Place Order'}</NavigationItem>\n        </ul>\n    );\n};\n\nNavigationItems.propTypes = {};\n\nexport default NavigationItems;","import React from 'react';\nimport './ToggleDrawer.css';\n\nconst ToggleDrawer = props => {\n    return (\n        <div className={'ToggleDrawer'} onClick={props.clicked}>\n            <div/>\n            <div/>\n            <div/>\n        </div>\n    );\n};\n\nToggleDrawer.propTypes = {};\n\nexport default ToggleDrawer;","import './Toolbar.css';\nimport React from 'react';\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport ToggleDrawer from \"../SideDrawer/ToggleDrawer/ToggleDrawer\";\n\nconst Toolbar = props => {\n    return (\n        <div className={'Toolbar'}>\n            <ToggleDrawer clicked={props.clicked}/>\n            <Logo height={'80%'}/>\n            <div className={'DesktopOnly'}>\n                <NavigationItems/>\n            </div>\n        </div>\n    );\n};\n\nToolbar.propTypes = {};\n\nexport default Toolbar;","import React from 'react';\nimport './SideDrawer.css';\nimport Aux from \"../../hoc/Aux\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nconst SideDrawer = props => {\n    let attachedClasses = ['SideDrawer Close'];\n    if (props.open) {\n        attachedClasses = ['SideDrawer Open'];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.clicked}/>\n            <div className={attachedClasses.join(' ')}>\n                <Logo height={'15%'}/>\n                <NavigationItems/>\n            </div>\n        </Aux>\n    );\n};\n\nSideDrawer.propTypes = {};\n\nexport default SideDrawer;","import './Layout.css';\nimport React from \"react\";\nimport BurgerBuilder from \"../../containers/BurgerBuilder/BurgerBuilder\";\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../Navigation/SideDrawer/SideDrawer\";\n\nclass Layout extends React.Component {\n    state = {\n        isSideDrawerOpen: false\n    }\n\n    closeSideDrawer = () => {\n        this.setState({isSideDrawerOpen: false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState(\n            (prevState) => {\n                return (\n                    {isSideDrawerOpen: !prevState.isSideDrawerOpen}\n                );\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"Layout\">\n                <Toolbar clicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer\n                    open={this.state.isSideDrawerOpen}\n                    clicked={this.closeSideDrawer}/>\n                <BurgerBuilder/>\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import './App.css';\nimport React, {Component} from 'react';\nimport Layout from \"../components/Layout/Layout\";\n\nclass App extends Component {\n    render = () => {\n        return (\n            <div className=\"App\">\n                <Layout/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}